<!DOCTYPE html>
<html lang="pl">
  <head>
    <meta charset="utf-8" />
    <title>NAI 2017</title>
<style type="text/css">
table td {
    width: 30px;
    overflow: hidden;
    display: inline-block;
    white-space: nowrap;
}
</style>

</head>

<body>

<?php
    
//INTERFEJS//---------------------------------------

$refresh = 0;
$cell = "cell";
    
echo("<form action='nai.php' method='post'>");
    
// Tabela z wartościami
echo("EDYTOR");
echo("<table border='1'>");
for($ti=0; $ti < 35; $ti++){
if($ti%5 == 0){echo("<tr>");}
echo("<td><input type='text' name='$cell$ti' size='1' value='15' /></td>");
if(($ti+1)%5 == 0){echo("</tr>");}    
}
echo("</table>");
//Koniec

echo("<br/><input type='submit' value='wyświetl'></form>");
    
//walidacja
    
//Tabela informacyjna
    
echo("<table border='1'>");
for($tn=0; $tn < 35; $tn++){
if($tn%5 == 0){echo("<tr>");}
echo("<td>".$_POST['cell'.$tn]."</td>");
    
if(($tn+1)%5 == 0){echo("</tr>");}    
}
echo("</table>");

// Tabela wyświetlająca
    
echo("<table border='1'>");
for($to=0; $to < 35; $to++){
if($to%5 == 0){echo("<tr>");}
echo("<td bgcolor=#".dechex($_POST['cell'.$to]).dechex($_POST['cell'.$to]).dechex($_POST['cell'.$to]).dechex($_POST['cell'.$to]).dechex($_POST['cell'.$to]).dechex($_POST['cell'.$to]).">&nbsp;</td>");
    
if(($to+1)%5 == 0){echo("</tr>");}    
}
echo("</table>");
    
echo("<br/>Rozpoznano:<br/>");
    
//INTERFEJS - KONIEC//--------------------------
    

    
$m = 35; //liczba wejść na neuron
$n = 26; //liczba neuronów

$alfa = 0.5; //współczynnik alfa dla funkcji simoidalnej
$eta = 0.02; //współczynnik uczenia
$blad = 0.01; //poziom błędu

    
// TABLICA UCZĄCA
$U = Array(
    0 => array(
    1,0,0,0,1,
    0,1,1,1,0,
    0,1,1,1,0,
    0,0,0,0,0,
    0,1,1,1,0,
    0,1,1,1,0,
    0,1,1,1,0
),    
    1 => array(
    0,0,0,0,1,
    0,1,1,1,0,
    0,1,1,1,0,
    0,0,0,0,1,
    0,1,1,1,0,
    0,1,1,1,0,
    0,0,0,0,1
),
    2 => array(1,0,0,0,1,0,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,0,0,0,1),   //C
    3 => array(0,0,0,0,1,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,1),   //D
    4 => array(0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0),   //E
    5 => array(0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1),   //F
    6 => array(1,0,0,0,1,0,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,1,1,1,0,0,1,1,1,0,1,0,0,0,1),   //G
    7 => array(0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0),   //H
    8 => array(1,0,0,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,0,1),   //I
    9 => array(0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,1,0,0,0,1),   //J
    10 => array(0,1,1,1,0,0,1,1,0,1,0,1,0,1,1,0,0,1,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,1,0),  //K
    11 => array(0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0),  //L
    12 => array(0,1,1,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0),  //M
    13 => array(0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,0,1,0,1,0,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0),  //N
    14 => array(1,0,0,0,1,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,1,0,0,0,1),  //O
    15 => array(0,0,0,0,1,0,1,1,1,0,0,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1),  //P
    16 => array(1,0,0,0,1,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,0,1,0,0,1,1,0,1,1,0,0,1,0),  //Q
    17 => array(0,0,0,0,1,0,1,1,1,0,0,1,1,1,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1,0,1,1,1,0),  //R
    18 => array(1,0,0,0,1,0,1,1,1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,1,1,1,0,1,0,0,0,1),  //S
    19 => array(0,0,0,0,0,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1),  //T
    20 => array(0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,1,0,0,0,1),  //U
    21 => array(0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,1,0,1,0,1,1,1,0,1,1),  //V
    22 => array(0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1),  //W
    23 => array(0,1,1,1,0,0,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,0,0,1,1,1,0),  //X
    24 => array(0,1,1,1,0,0,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1),  //Y
    25 => array(0,0,0,0,0,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,0,0,0,0,0)   //Z
  );
 
// MACIERZ WZORÓW ODPOWIEDZI
$D = Array(
    0 => array(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    1 => array(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    2 => array(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    3 => array(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    4 => array(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    5 => array(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    6 => array(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    7 => array(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    8 => array(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    9 => array(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    10 => array(0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    11 => array(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
    12 => array(0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0),
    13 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0),
    14 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0),
    15 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0),
    16 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0),
    17 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0),
    18 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0),
    19 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0),
    20 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0),
    21 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0),
    22 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0),
    23 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0),
    24 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0),
    25 => array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1)
  );

    
// TABLICA WAG - randomowe wagi od -0.5 do 0.5
for($i=0; $i < $n; $i++){
    
    for($j=0; $j < $m; $j++){
        $W[$i][$j] = (rand(0,100)/100) - 0.5;
    }
}
    
echo("<pre>");
print_r($W);
echo("</pre>");
    

    
for($i=0; $i < $n ;$i++){
    
    $e = 1;
    $iteracja = 0;
    
//--PĘTLA UCZĄCA

    while($e > 0.01){
    
//-- SUMATOR
        $sumator = 0;
    
        for($j=0; $j < $m; $j++){

            $sumator = $sumator + $U[$i][$j] * $W[$i][$j];
            
            //if($i==0){echo("<br/>j =".$j.", mnożenie wagi ".$U[$i][$j]."*".$W[$i][$j]."<br/>");}
        }
//-- SUMATOR KONIEC
        
        $iteracja++;
        echo("<br/><b>Neuron ".$i." #".$iteracja." ");
        echo("Sumator: ".$sumator." ");

//-- FUNKCJA SIMOIDALNA
        $y[$i] = 1/( 1 + exp(-$alfa * $sumator) );
        
        echo("Sigmoidalna: ".$y[$i]." ");
//-- FUNKCJA SIMOIDALNA KONIEC        
        
//-- WYLICZENIE WSPÓŁCZYNNIKA BŁĘDU        
        $e = 0.5 * pow(($y[$i] - $D[$i][$i]),2);
        
        echo(" Błąd e: ".$e."</b><br/>");
//--WYLICZENIE WSPÓŁCZYNNIKA BŁĘDU KONIEC
        
//-- MODYFIKATOR WAG  
        for($j=0; $j < $m; $j++){
    
            $W[$i][$j] = $W[$i][$j] - $eta * ($y[$i] - $D[$i][$i]) * $U[$i][$j];
            
            if($i==0){echo("<br/>j =".$j.", modyfikator wag W: ".$W[$i][$j]."=".$W[$i][$j]."-".$eta." * (".$y[$i]." - ".$D[$i][$i].") * ".$U[$i][$j]."<br/>");}
        }
//-- MODYFIKATOR WAG KONIEC
    
    }
}
//-- PĘTLA UCZĄCA KONIEC
    
    
echo("<br/>");
echo("<pre>");
print_r($W);
echo("</pre>");
    
?>


</body>

</html>

